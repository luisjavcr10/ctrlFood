# This workflow will build and push a PHP application to an Azure Web App when a commit is pushed to your default branch.
# This assumes you have already created the target Azure App Service web app.
# For instructions, see: https://docs.microsoft.com/en-us/azure/app-service/quickstart-php?pivots=platform-linux
#
# To configure this workflow:
# 1. Download the Publish Profile for your Azure Web App from the Overview page of your Web App in the Azure Portal.
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE and paste the publish profile contents as the value.
# 3. Update the AZURE_WEBAPP_NAME, and optionally adjust AZURE_WEBAPP_PACKAGE_PATH and PHP_VERSION.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions

name: Build and deploy PHP app to Azure Web App

on:
  push:
    branches: 
      - "main"  # Use 'main' instead of 'master' for modern conventions
  workflow_dispatch:

# Remove env for versions, setting them directly where required

permissions:
  contents: read                             # Set to read-only for security

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2  # Use versioned release instead of commit hash
        with:
          php-version: '7.4'  # Set PHP version explicitly to 8.1
          extensions: mbstring, intl, pdo, curl # Add required PHP extensions

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1.1.0  # Use versioned release
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .

  deploy:
    permissions:
      contents: none  # Ensure least privilege for security
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: your-app-name  # Explicitly set the Azure Web App name here
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '.'  # Explicitly set the package path
